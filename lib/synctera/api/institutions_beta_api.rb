=begin
#Synctera API

#This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.139.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'cgi'

module Synctera
  class InstitutionsBetaApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve a list of institutions
    # @param country_codes [Array<String>] The countries of operation of the financial institutions
    # @param routing_numbers [Array<String>] An array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page_token 
    # @return [InstitutionList]
    def get_institutions(country_codes, routing_numbers, opts = {})
      data, _status_code, _headers = get_institutions_with_http_info(country_codes, routing_numbers, opts)
      data
    end

    # Retrieve a list of institutions
    # @param country_codes [Array<String>] The countries of operation of the financial institutions
    # @param routing_numbers [Array<String>] An array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page_token 
    # @return [Array<(InstitutionList, Integer, Hash)>] InstitutionList data, response status code and response headers
    def get_institutions_with_http_info(country_codes, routing_numbers, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InstitutionsBetaApi.get_institutions ...'
      end
      # verify the required parameter 'country_codes' is set
      if @api_client.config.client_side_validation && country_codes.nil?
        fail ArgumentError, "Missing the required parameter 'country_codes' when calling InstitutionsBetaApi.get_institutions"
      end
      if @api_client.config.client_side_validation && country_codes.length < 1
        fail ArgumentError, 'invalid value for "country_codes" when calling InstitutionsBetaApi.get_institutions, number of items must be greater than or equal to 1.'
      end

      # verify the required parameter 'routing_numbers' is set
      if @api_client.config.client_side_validation && routing_numbers.nil?
        fail ArgumentError, "Missing the required parameter 'routing_numbers' when calling InstitutionsBetaApi.get_institutions"
      end
      if @api_client.config.client_side_validation && routing_numbers.length < 1
        fail ArgumentError, 'invalid value for "routing_numbers" when calling InstitutionsBetaApi.get_institutions, number of items must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/institutions'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'country_codes'] = @api_client.build_collection_param(country_codes, :csv)
      query_params[:'routing_numbers'] = @api_client.build_collection_param(routing_numbers, :csv)
      query_params[:'page_token'] = opts[:'page_token'] if !opts[:'page_token'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'InstitutionList'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"InstitutionsBetaApi.get_institutions",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InstitutionsBetaApi#get_institutions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
