=begin
#Synctera API

#<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.74.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module Synctera
  class ACHTransactionSimulationsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Simulate receiving ACH return
    # Use to simulate receiving ACH return in test environments. Creates an incoming ACH file with a single return entry based on a previously created outgoing transaction. The file gets automatically processed.
    # @param ach_return_simulation_request [AchReturnSimulationRequest] Incoming ACH return simulation
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def ach_return_simulation(ach_return_simulation_request, opts = {})
      data, _status_code, _headers = ach_return_simulation_with_http_info(ach_return_simulation_request, opts)
      data
    end

    # Simulate receiving ACH return
    # Use to simulate receiving ACH return in test environments. Creates an incoming ACH file with a single return entry based on a previously created outgoing transaction. The file gets automatically processed.
    # @param ach_return_simulation_request [AchReturnSimulationRequest] Incoming ACH return simulation
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def ach_return_simulation_with_http_info(ach_return_simulation_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHTransactionSimulationsApi.ach_return_simulation ...'
      end
      # verify the required parameter 'ach_return_simulation_request' is set
      if @api_client.config.client_side_validation && ach_return_simulation_request.nil?
        fail ArgumentError, "Missing the required parameter 'ach_return_simulation_request' when calling ACHTransactionSimulationsApi.ach_return_simulation"
      end
      # resource path
      local_var_path = '/ach/transaction_simulations/receiving_return'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(ach_return_simulation_request)

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"ACHTransactionSimulationsApi.ach_return_simulation",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHTransactionSimulationsApi#ach_return_simulation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Simulate receiving ACH transaction
    # Use to simulate receiving ACH transaction in test environments. Creates an incoming ACH file with a single transaction, which gets automatically processed.
    # @param ach_transaction_simulation_request [AchTransactionSimulationRequest] Sent ACH request
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def ach_transaction_simulation(ach_transaction_simulation_request, opts = {})
      data, _status_code, _headers = ach_transaction_simulation_with_http_info(ach_transaction_simulation_request, opts)
      data
    end

    # Simulate receiving ACH transaction
    # Use to simulate receiving ACH transaction in test environments. Creates an incoming ACH file with a single transaction, which gets automatically processed.
    # @param ach_transaction_simulation_request [AchTransactionSimulationRequest] Sent ACH request
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def ach_transaction_simulation_with_http_info(ach_transaction_simulation_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHTransactionSimulationsApi.ach_transaction_simulation ...'
      end
      # verify the required parameter 'ach_transaction_simulation_request' is set
      if @api_client.config.client_side_validation && ach_transaction_simulation_request.nil?
        fail ArgumentError, "Missing the required parameter 'ach_transaction_simulation_request' when calling ACHTransactionSimulationsApi.ach_transaction_simulation"
      end
      # resource path
      local_var_path = '/ach/transaction_simulations/receiving_transaction'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(ach_transaction_simulation_request)

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"ACHTransactionSimulationsApi.ach_transaction_simulation",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHTransactionSimulationsApi#ach_transaction_simulation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
