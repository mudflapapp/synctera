=begin
#Synctera API

#<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.74.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'date'
require 'time'

module Synctera
  class EventTypeWildcard
    ACCOUNT = "ACCOUNT.*".freeze
    ACH = "ACH.*".freeze
    APPLICATION = "APPLICATION.*".freeze
    BUSINESS = "BUSINESS.*".freeze
    CARD = "CARD.*".freeze
    CASE = "CASE.*".freeze
    CASH_PICKUP = "CASH_PICKUP.*".freeze
    CREDIT_SCORE = "CREDIT_SCORE.*".freeze
    CUSTOMER = "CUSTOMER.*".freeze
    EXTERNAL_CARD = "EXTERNAL_CARD.*".freeze
    EXTERNAL_CARD_TRANSFER = "EXTERNAL_CARD_TRANSFER.*".freeze
    INTEREST = "INTEREST.*".freeze
    INTERNAL_TRANSFER = "INTERNAL_TRANSFER.*".freeze
    NOTE = "NOTE.*".freeze
    PAYMENT_SCHEDULE = "PAYMENT_SCHEDULE.*".freeze
    PERSON = "PERSON.*".freeze
    STATEMENT = "STATEMENT.*".freeze
    TRANSACTION = "TRANSACTION.*".freeze

    def self.all_vars
      @all_vars ||= [ACCOUNT, ACH, APPLICATION, BUSINESS, CARD, CASE, CASH_PICKUP, CREDIT_SCORE, CUSTOMER, EXTERNAL_CARD, EXTERNAL_CARD_TRANSFER, INTEREST, INTERNAL_TRANSFER, NOTE, PAYMENT_SCHEDULE, PERSON, STATEMENT, TRANSACTION].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if EventTypeWildcard.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #EventTypeWildcard"
    end
  end
end
