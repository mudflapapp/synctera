=begin
#Synctera API

#This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.136.0

Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'date'
require 'time'

module Synctera
  class IndustryType
    ACCOMMODATION_AND_FOOD_SERVICES = "ACCOMMODATION_AND_FOOD_SERVICES".freeze
    ADMINISTRATIVE_AND_SUPPORT_AND_WASTE_MANAGEMENT_AND_REMEDIATION_SERVICES = "ADMINISTRATIVE_AND_SUPPORT_AND_WASTE_MANAGEMENT_AND_REMEDIATION_SERVICES".freeze
    AGRICULTURE_FORESTRY_FISHING_AND_HUNTING = "AGRICULTURE_FORESTRY_FISHING_AND_HUNTING".freeze
    ARTS_ENTERTAINMENT_AND_RECREATION = "ARTS_ENTERTAINMENT_AND_RECREATION".freeze
    CONSTRUCTION = "CONSTRUCTION".freeze
    EDUCATIONAL_SERVICES = "EDUCATIONAL_SERVICES".freeze
    FINANCE_AND_INSURANCE = "FINANCE_AND_INSURANCE".freeze
    HEALTH_CARE_AND_SOCIAL_ASSISTANCE = "HEALTH_CARE_AND_SOCIAL_ASSISTANCE".freeze
    INFORMATION = "INFORMATION".freeze
    MANAGEMENT_OF_COMPANIES_AND_ENTERPRISES = "MANAGEMENT_OF_COMPANIES_AND_ENTERPRISES".freeze
    MANUFACTURING = "MANUFACTURING".freeze
    MINING_QUARRYING_AND_OIL_AND_GAS_EXTRACTION = "MINING_QUARRYING_AND_OIL_AND_GAS_EXTRACTION".freeze
    OTHER_SERVICES = "OTHER_SERVICES".freeze
    PROFESSIONAL_SCIENTIFIC_AND_TECHNICAL_SERVICES = "PROFESSIONAL_SCIENTIFIC_AND_TECHNICAL_SERVICES".freeze
    PUBLIC_ADMINISTRATION = "PUBLIC_ADMINISTRATION".freeze
    REAL_ESTATE_AND_RENTAL_AND_LEASING = "REAL_ESTATE_AND_RENTAL_AND_LEASING".freeze
    RETAIL_TRADE = "RETAIL_TRADE".freeze
    TRANSPORTATION_AND_WAREHOUSING = "TRANSPORTATION_AND_WAREHOUSING".freeze
    UTILITIES = "UTILITIES".freeze
    WHOLESALE_TRADE = "WHOLESALE_TRADE".freeze

    def self.all_vars
      @all_vars ||= [ACCOMMODATION_AND_FOOD_SERVICES, ADMINISTRATIVE_AND_SUPPORT_AND_WASTE_MANAGEMENT_AND_REMEDIATION_SERVICES, AGRICULTURE_FORESTRY_FISHING_AND_HUNTING, ARTS_ENTERTAINMENT_AND_RECREATION, CONSTRUCTION, EDUCATIONAL_SERVICES, FINANCE_AND_INSURANCE, HEALTH_CARE_AND_SOCIAL_ASSISTANCE, INFORMATION, MANAGEMENT_OF_COMPANIES_AND_ENTERPRISES, MANUFACTURING, MINING_QUARRYING_AND_OIL_AND_GAS_EXTRACTION, OTHER_SERVICES, PROFESSIONAL_SCIENTIFIC_AND_TECHNICAL_SERVICES, PUBLIC_ADMINISTRATION, REAL_ESTATE_AND_RENTAL_AND_LEASING, RETAIL_TRADE, TRANSPORTATION_AND_WAREHOUSING, UTILITIES, WHOLESALE_TRADE].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if IndustryType.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #IndustryType"
    end
  end
end
