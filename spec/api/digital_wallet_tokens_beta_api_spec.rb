=begin
#Synctera API

#This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 1.82.0

Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Synctera::DigitalWalletTokensBetaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DigitalWalletTokensBetaApi' do
  before do
    # run before each test
    @api_instance = Synctera::DigitalWalletTokensBetaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DigitalWalletTokensBetaApi' do
    it 'should create an instance of DigitalWalletTokensBetaApi' do
      expect(@api_instance).to be_instance_of(Synctera::DigitalWalletTokensBetaApi)
    end
  end

  # unit tests for create_digital_wallet_apple
  # Create digital wallet token provision request for Apple Pay
  # &gt; üöß Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint. 
  # @param card_id 
  # @param apple_digital_wallet_provision_request Request to provision digital wallet card data to pass to Apple Pay digital wallet. &gt; ‚ö†Ô∏è Cannot be used outside of production. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [AppleDigitalWalletProvisionResponse]
  describe 'create_digital_wallet_apple test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_digital_wallet_google
  # Create digital wallet token provision request for Google Pay
  # &gt; üöß Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint. 
  # @param card_id 
  # @param google_digital_wallet_provision_request Request to provision digital wallet card data to pass to Google Pay digital wallet. &gt; ‚ö†Ô∏è Cannot be used outside of production. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [GoogleDigitalWalletProvisionResponse]
  describe 'create_digital_wallet_google test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_digital_wallet_token
  # Get Digital Wallet Token
  # &gt; üöß Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Get the details about the digital wallet token of a card &lt;br&gt;NB: Digital wallet tokens cannot be created outside of production&lt;/br&gt; 
  # @param digital_wallet_token_id 
  # @param [Hash] opts the optional parameters
  # @return [DigitalWalletTokenResponse]
  describe 'get_digital_wallet_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_digital_wallet_tokens
  # List Digital Wallet Tokens
  # &gt; üöß Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  List Digital Wallet Tokens 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page_token 
  # @option opts [Integer] :limit 
  # @option opts [DigitalWalletTokenState] :token_state The status of the Digital Wallet Token
  # @option opts [String] :card_id 
  # @return [TokenListResponse]
  describe 'list_digital_wallet_tokens test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_digital_wallet_token_status
  # Update Digital Wallet Token&#39;s life cycle status
  # &gt; üöß Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  The status of a digital wallet token can be updated as, ACTIVE to SUSPENDED, SUSPENDED to ACTIVE, ACTIVE to TERMINATED or SUSPENDED to TERMINATED. &lt;br&gt;NB: Digital wallet tokens cannot be created outside of production&lt;/br&gt; 
  # @param digital_wallet_token_id 
  # @param digital_wallet_token_edit_request Update Digital wallet token status
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [DigitalWalletTokenResponse]
  describe 'update_digital_wallet_token_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
