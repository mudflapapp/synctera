=begin
#Synctera API

#This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 1.82.0

Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Synctera::ExternalCardsBetaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ExternalCardsBetaApi' do
  before do
    # run before each test
    @api_instance = Synctera::ExternalCardsBetaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ExternalCardsBetaApi' do
    it 'should create an instance of ExternalCardsBetaApi' do
      expect(@api_instance).to be_instance_of(Synctera::ExternalCardsBetaApi)
    end
  end

  # unit tests for create_external_card_from_token
  # Create External Card from token
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Create an External Card from token. The token and cardholder name are obtained through the iFrame. The token must be used within 5 minutes or else it will expire. If a Business ID is provided, address verification will be performed against the legal address of the business. Otherwise, the legal address of the Customer will be used. In either case, the name of the Customer will be used to match against the cardholder name.  Each unique External Card is limited to a single Customer, so once an External Card is created for a Customer, it cannot be used for any other Customers, even if the card is deleted. Given there is a limited number of test cards, to allow easier testing, this restriction is relaxed in the sandbox environment. 
  # @param external_card_request Details of the External Card to create
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [ExternalCardResponse]
  describe 'create_external_card_from_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_external_card_transfer
  # Create External Card Transfer
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Create External Card Transfer 
  # @param transfer_request Details of the External Card Transfer to create
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [CreateTransferResponse]
  describe 'create_external_card_transfer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_external_card_transfer_reversal
  # Create External Card Transfer Reversal
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Create External Card Transfer Reversal 
  # @param transfer_id The unique identifier of a transfer
  # @param transfer_reversal_request Details of the External Card Transfer Reversal to create
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [TransferResponse]
  describe 'create_external_card_transfer_reversal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_external_card
  # Delete External Card
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Delete an External Card  
  # @param external_card_id The unique identifier of an external card
  # @param [Hash] opts the optional parameters
  # @return [DeleteResponse]
  describe 'delete_external_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_external_card
  # Get External Card
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Get External Card 
  # @param external_card_id The unique identifier of an external card
  # @param [Hash] opts the optional parameters
  # @return [ExternalCardResponse]
  describe 'get_external_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_external_card_transfer
  # Get External Card Transfer
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Get External Card Transfer 
  # @param transfer_id The unique identifier of a transfer
  # @param [Hash] opts the optional parameters
  # @return [TransferResponse]
  describe 'get_external_card_transfer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_external_card_transfers
  # List External Transfers
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  List External Card Transfers 
  # @param [Hash] opts the optional parameters
  # @option opts [TransferType] :type The type of an external transfer
  # @option opts [Array<String>] :originating_account_id 
  # @option opts [Array<String>] :customer_id 
  # @option opts [String] :external_card_id 
  # @option opts [String] :page_token 
  # @option opts [Integer] :limit 
  # @return [TransferListResponse]
  describe 'list_external_card_transfers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_external_cards
  # List External Cards
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  List External Cards 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :customer_id 
  # @option opts [String] :business_id 
  # @option opts [String] :page_token 
  # @option opts [ExternalCardStatus] :status 
  # @option opts [Integer] :limit 
  # @return [ExternalCardListResponse]
  describe 'list_external_cards test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_external_card
  # Update External Card
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. We may make breaking changes to this endpoint.  Update External Card data 
  # @param external_card_id The unique identifier of an external card
  # @param external_card_update_request Fields to update
  # @param [Hash] opts the optional parameters
  # @return [ExternalCardResponse]
  describe 'update_external_card test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
