=begin
#Synctera API

#<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.74.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Synctera::InternalTransferApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'InternalTransferApi' do
  before do
    # run before each test
    @api_instance = Synctera::InternalTransferApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InternalTransferApi' do
    it 'should create an instance of InternalTransferApi' do
      expect(@api_instance).to be_instance_of(Synctera::InternalTransferApi)
    end
  end

  # unit tests for create_internal_transfer
  # Create an internal transfer
  # An internal transfer is an payment between two accounts within the same Fintech.  By default, the payment is posted immediately. To indicate that you want to separate the authorization from the completion of the payment, use &#x60;capture_mode&#x60; &#x3D; &#x60;MANUAL&#x60;. In that case, a separate call to update the status of the transfer will be required to complete the payment.
  # @param internal_transfer Internal transfer request body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [InternalTransferResponse]
  describe 'create_internal_transfer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_internal_transfer_by_id
  # Get an internal transfer
  # Get an internal transfer auth by ID
  # @param id Transaction ID
  # @param [Hash] opts the optional parameters
  # @return [InternalTransferResponse]
  describe 'get_internal_transfer_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_internal_transfer_by_id
  # Update an internal transfer
  # Update an internal transfer.  This is only relevant when committing or cancelling an internal transfer authorization (created with &#x60;capture_mode&#x60; &#x3D; &#x60;MANUAL&#x60;) that hasn&#39;t already been completed.
  # @param id Transaction ID
  # @param internal_transfer_patch Internal transfer request body
  # @param [Hash] opts the optional parameters
  # @return [InternalTransferResponse]
  describe 'update_internal_transfer_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
