=begin
#Synctera API

#<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.74.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Synctera::LicensesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LicensesApi' do
  before do
    # run before each test
    @api_instance = Synctera::LicensesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LicensesApi' do
    it 'should create an instance of LicensesApi' do
      expect(@api_instance).to be_instance_of(Synctera::LicensesApi)
    end
  end

  # unit tests for create_licenses
  # Create a license and associate it with a business
  # License represents a business permit that will be verified 
  # @param post_license license to be created
  # @param [Hash] opts the optional parameters
  # @return [ResponseLicense]
  describe 'create_licenses test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_license
  # Get license
  # Get license record by id
  # @param license_id License record identifier
  # @param [Hash] opts the optional parameters
  # @return [ResponseLicense]
  describe 'get_license test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_licenses
  # list licenses
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :business_id Unique identifier for the business. Multiple IDs can be provided as a comma-separated list. 
  # @option opts [String] :customer_id The customer&#39;s unique identifier
  # @return [LicenseList]
  describe 'list_licenses test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_license
  # Patch License
  # Update a License by ID.
  # @param license_id License record identifier
  # @param license_patch 
  # @param [Hash] opts the optional parameters
  # @return [ResponseLicense]
  describe 'patch_license test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
