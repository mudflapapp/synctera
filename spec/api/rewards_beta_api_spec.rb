=begin
#Synctera API

#This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 1.82.0

Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Synctera::RewardsBetaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RewardsBetaApi' do
  before do
    # run before each test
    @api_instance = Synctera::RewardsBetaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RewardsBetaApi' do
    it 'should create an instance of RewardsBetaApi' do
      expect(@api_instance).to be_instance_of(Synctera::RewardsBetaApi)
    end
  end

  # unit tests for create_reward
  # Create a reward
  # Create a reward  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param reward_post Reward to create
  # @param [Hash] opts the optional parameters
  # @return [RewardResponse]
  describe 'create_reward test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_reward_template
  # Create a reward template
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced.  Create a reward template A reward template defines the properties of a reward that a fintech wishes to use to easily charge their customers. The fintech can then create reward templates for different amounts or categories of rewards that represent different instances of services or charges 
  # @param reward_template_post Reward to create  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param [Hash] opts the optional parameters
  # @return [RewardTemplateResponse]
  describe 'create_reward_template test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_reward
  # Get Reward
  # Get a reward by ID.  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param reward_id The unique identifier of a reward
  # @param [Hash] opts the optional parameters
  # @return [RewardResponse]
  describe 'get_reward test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_reward_template
  # Get a Reward template
  # Get a reward template by ID.  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param reward_template_id The unique identifier of a reward template
  # @param [Hash] opts the optional parameters
  # @return [RewardTemplateResponse]
  describe 'get_reward_template test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_rewards
  # List rewards
  # Get paginated list of rewards  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :start_time Return rewards created at or after this time.
  # @option opts [String] :description Return rewards with the specified description.
  # @option opts [Array<String>] :id Return the reward with the specified id. Multiple IDs can be provided as a comma-separated list. 
  # @option opts [Time] :end_time Return rewards created before this time.
  # @option opts [String] :page_token 
  # @option opts [Array<String>] :reward_template_id Return rewards resources with a reward template of the specified id. Multiple IDs can be provided as a comma-separated list. 
  # @option opts [RewardSubtype] :subtype 
  # @option opts [Integer] :limit 
  # @option opts [Array<String>] :account_id Return rewards for the specified account.
  # @return [RewardList]
  describe 'list_rewards test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_rewardtemplates
  # List reward templates
  # &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced.  Get paginated list of reward templates 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort_by Specifies the sort order for the returned reward templates. 
  # @option opts [String] :description Return reward templates with the specified description. A * character can be used as a wildcard to match any characters.
  # @option opts [String] :page_token 
  # @option opts [Array<String>] :id Return reward templates with the specified id. Multiple IDs can be provided as a comma-separated list. 
  # @option opts [Boolean] :is_enabled Return reward templates with the specified is_enabled flag.
  # @option opts [Integer] :limit 
  # @option opts [RewardSubtype] :subtype 
  # @return [RewardTemplateList]
  describe 'list_rewardtemplates test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_reward_template
  # Patch Reward Template
  # Update a reward template by ID.  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param reward_template_id The unique identifier of a reward template
  # @param reward_template_patch 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [RewardTemplateResponse]
  describe 'patch_reward_template test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reverse_reward
  # Reverse a reward
  # Reverse the reward by creating a reversal transaction.  &gt; ðŸš§ Beta &gt; This is a Beta endpoint. Feedback from the community is welcome. Any breaking changes to this endpoint will be pre-announced. 
  # @param reward_id The unique identifier of a reward
  # @param reward_reverse_post Reward reversal properties
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [RewardResponse]
  describe 'reverse_reward test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
