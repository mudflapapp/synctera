=begin
#Synctera API

#<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

The version of the OpenAPI document: 0.74.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Synctera::KYCVerificationDeprecatedApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'KYCVerificationDeprecatedApi' do
  before do
    # run before each test
    @api_instance = Synctera::KYCVerificationDeprecatedApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of KYCVerificationDeprecatedApi' do
    it 'should create an instance of KYCVerificationDeprecatedApi' do
      expect(@api_instance).to be_instance_of(Synctera::KYCVerificationDeprecatedApi)
    end
  end

  # unit tests for create_customer_verification_result
  # Create a customer verification result
  # Create a verification result for a customer. This endpoint will be removed in API v1. Use &#x60;POST /v0/verifications&#x60; instead. 
  # @param customer_id The customer&#39;s unique identifier
  # @param customer_verification_result Customer verification result to create.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [CustomerVerificationResult]
  describe 'create_customer_verification_result test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_verification
  # Get verification result
  # Get verification result by ID.  This endpoint will be removed in API v1. Use &#x60;GET /v0/verifications/{verification_id}&#x60; instead. 
  # @param customer_id The customer&#39;s unique identifier
  # @param verification_id Unique identifier for the verification.
  # @param [Hash] opts the optional parameters
  # @return [CustomerVerificationResult]
  describe 'get_verification test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_verifications
  # List verification results
  # List verification results.  This endpoint will be removed in API v1. Use &#x60;GET /v0/verifications?customer_id&#x3D;{customer_id}&#x60; instead. 
  # @param customer_id The customer&#39;s unique identifier
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_history If true, include old (inactive) records as well.
  # @option opts [String] :page_token 
  # @option opts [Integer] :limit 
  # @return [CustomerVerificationResultList]
  describe 'list_verifications test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verify_customer
  # Verify a customer&#39;s identity
  # Initiate identity verification for a customer and run the specified identity checks.  Verifying a personal customer requires that the following fields already be set: * &#x60;first_name&#x60; * &#x60;last_name&#x60; * &#x60;dob&#x60; * &#x60;email&#x60; * &#x60;phone_number&#x60; * &#x60;legal_address&#x60; * &#x60;ssn&#x60;  This endpoint will be removed in API v1. Use &#x60;POST /v0/verifications/verify&#x60; instead. 
  # @param customer_id The customer&#39;s unique identifier
  # @param customer_verification Customer verification request.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key An idempotency key is an arbitrary unique value generated by client to detect subsequent retries of the same request. It is recommended that a UUID or a similar random identifier be used as an idempotency key. A different key must be used for each request, unless it is a retry.
  # @return [CustomerVerifyResponse]
  describe 'verify_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
